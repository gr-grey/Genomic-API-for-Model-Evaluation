Bootstrap: docker
From: python:3.13-slim
Stage: build

%files
    agarwal_evaluator_joint_lib.py /evaluator_script_and_utils/agarwal_evaluator_joint_lib.py
    evaluator_utils.py /evaluator_script_and_utils/evaluator_utils.py

%environment
    # Prevent automatic binding of host directories
    export APPTAINER_NO_MOUNT="home,tmp,proc,sys,dev"
    export LC_ALL=C
    export PATH="/usr/local/bin:$PATH"

%post
    # Install system packages and dependencies
    echo "Installing system dependencies..."
    apt-get update && \
    apt-get install -y --no-install-recommends python3-pip wget bzip2 ca-certificates && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

    echo "Installing Python dependencies..."
    python -m pip install --upgrade pip
    python -m pip install --no-cache-dir numpy tqdm pandas openpyxl

    # Set permissions to access all directories
    echo "Setting permissions for directories and script..."
    chmod -R 755 /evaluator_script_and_utils

%runscript
    # This section defines the default run behavior of the container
    exec python3 /evaluator_script_and_utils/agarwal_evaluator_joint_lib.py "$@"

%startscript
    exec python3 /evaluator_script_and_utils/agarwal_evaluator_joint_lib.py "$@"

%labels
    Author "Satyam Priyadarshi"
    Version "1.0"
    Description "This container is the Evaluator set up for Genomic API for Model Evaluation for Agarwal et al. (2025) Joint Library dataset. 
    The dataset consists of measured potential enhancers and promoters tested in HepG2, K562, and WTC11 cells, along with control elements, 
    enabling standardized evaluation of genomic models."

%help
    This container includes:
    - Evaluator API script for genomic sequence evaluation.
    - Evaluator helper script for error checking functions.
    - Installed Python dependencies required by the Evaluator.

    Usage:
    We encourage using pre-built containers for this model that are hosted on Zenodo.

    However, if you are building the container using this definition file, ensure you have the following directory structure on the host:
    ```
    /path/to/evaluator_script_and_utils/
    ├── README.md
    ├── agarwal_evaluator.def
    ├── agarwal_evaluator_joint_lib.py
    ├── evaluator_data
    │   └── 2023-03-03628-s5/
    ├── evaluator_utils.py
    └── predictions/
    ```

    Build the container (SIF)
    ```
    apptainer build agarwal_2025_joint_lib_evaluator.sif agarwal_evaluator.def
    ```

    Bind these directories and run the container:
    ```bash
    apptainer run \
      -B absolute/path/to/evaluator_data:/evaluator_data \
      -B absolute/path/to/predictions:/predictions \
      agarwal_2025_joint_lib_evaluator.sif PREDICTOR_HOST PREDICTOR_PORT /predictions
    ```
    Details:
    - The container sends and receives data via a TCP socket and requires directories to be mounted.
    - Replace `PREDICTOR_HOST` and `PREDICTOR_PORT` with the server IP and port configuration.

    Purpose:
    - Facilitates genomic sequence evaluation by interacting with the Predictor container.
    - Handles input/output through bound directories.

    Example Command:
    ```bash
    apptainer run \
      -B absolute/path/to/evaluator_data:/evaluator_data \
      -B absolute/path/to/predictions:/predictions \
      agarwal_2025_joint_lib_evaluator.sif 172.16.47.244 5000 /predictions
    ```

    Arguments:
    1. `PREDICTOR_HOST`: IP address or hostname of the Predictor server.
    2. `PREDICTOR_PORT`: Port number the Predictor is listening on.
    3. `/predictions`: Mounted path inside the container for storing output predictions.